/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhello_seule"] = self["webpackChunkhello_seule"] || []).push([["node_modules_seule_events_index_js"],{

/***/ "./node_modules/seule/events/index.js":
/*!********************************************!*\
  !*** ./node_modules/seule/events/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {el, find} = __webpack_require__(/*! ../locals/el */ \"./node_modules/seule/locals/el.js\")\r\n\r\nconst Events = () =>{\r\n    el.prototype.Add = function(event, handler, prevent) {\r\n        return this.Each(function() {\r\n            if (handler && !Array.isArray(this)) this.addEventListener(\r\n                event,\r\n                (event) => {\r\n                    prevent && event.preventDefault();\r\n                    handler(new el(this), this);\r\n                },\r\n                false\r\n            );\r\n        });\r\n    };\r\n\r\n    el.prototype.On = function(event, handler, prevent) {\r\n        return this.Each(function() {\r\n            if (handler && !Array.isArray(this)) {\r\n                this[\"on\"+event] = (event) => {\r\n                    prevent && event.preventDefault();\r\n                    handler(new el(this), this);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    el.prototype.Hold = function(handler, until = 1500) {\r\n        return this.Each(function() {\r\n            let mouseIsDown = false,\r\n                isTouch =\r\n                    \"ontouchstart\" in window ||\r\n                    navigator.MaxTouchPoints > 0 ||\r\n                    navigator.msMaxTouchPoints > 0,\r\n                mouseDown = isTouch ? \"touchstart\" : \"mousedown\",\r\n                mouseUp = isTouch ? \"touchend\" : \"mouseup\";\r\n            this.addEventListener(mouseDown, (e) => {\r\n                mouseIsDown = true;\r\n                setTimeout(function() {\r\n                    mouseIsDown && handler(new el(e), e);\r\n                }, until);\r\n            });\r\n            this.addEventListener(mouseUp, () => (mouseIsDown = false));\r\n        });\r\n    };\r\n\r\n    el.prototype.Swipe = function(on, handler) {\r\n        let elem = this.el,\r\n            xDown,\r\n            yDown;\r\n\r\n        for (let e of elem) {\r\n            e.addEventListener(\"touchstart\", handleTouchStart, false);\r\n            e.addEventListener(\"touchmove\", handleTouchMove, false);\r\n        }\r\n\r\n        function handleTouchStart(evt) {\r\n            xDown = evt.touches[0].clientX;\r\n            yDown = evt.touches[0].clientY;\r\n        }\r\n\r\n        function handleTouchMove(evt) {\r\n            if (!xDown || !yDown) return;\r\n            let xUp = evt.touches[0].clientX,\r\n                yUp = evt.touches[0].clientY,\r\n                xDiff = xDown - xUp,\r\n                yDiff = yDown - yUp;\r\n\r\n            if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n                if (xDiff > 10 && on === \"left\") handler(new el(this));\r\n                if (xDiff < -10 && on === \"right\") handler(new el(this));\r\n            } else {\r\n                if (yDiff > 10 && on === \"top\") handler(new el(this));\r\n                if (yDiff < -10 && on === \"bottom\") handler(new el(this));\r\n            }\r\n\r\n            xDown = null;\r\n            yDown = null;\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    el.prototype.HotKey = function(query, handler, prevent) {\r\n        let key = \"\",\r\n            start,\r\n            mapObj = {\r\n                Arrow: \"\",\r\n                Control: \"ctrl\"\r\n            },\r\n            queries = query.replace(/\\s/g, \"\");\r\n        return this.Each(function() {\r\n            this.addEventListener(\r\n                \"keydown\",\r\n                function(event) {\r\n                    prevent && event.preventDefault();\r\n\r\n                    key += event.key;\r\n\r\n                    key = key.replace(/Arrow|Control/gi, function(matched) {\r\n                        return mapObj[matched];\r\n                    });\r\n\r\n                    key = key.replace(/ /g, \"space\");\r\n\r\n                    start = key.toLowerCase().indexOf(queries.toLowerCase());\r\n\r\n                    if (start > -1) {\r\n                        handler && handler(new el(this));\r\n                        this.focus();\r\n                        key = \"\";\r\n                    }\r\n                },\r\n                true\r\n            );\r\n        });\r\n    };\r\n\r\n    el.prototype.Fire = function(event) {\r\n        return this.Each(function() {\r\n            event && this[event]()\r\n        });\r\n    };\r\n\r\n    el.prototype.Copy = function(target, events) {\r\n        let ons = events.split(\":\");\r\n\r\n        for (let on of ons) {\r\n            this.Add(on.trimStart().trimEnd(), function() {\r\n                let eventFired = new MouseEvent(on.trimStart().trimEnd(), {\r\n                    view: window,\r\n                    bubbles: true,\r\n                    cancelable: true\r\n                });\r\n                target.el[0].dispatchEvent(eventFired);\r\n            });\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    el.prototype.Toggle = function(event, methods, prevent) {\r\n        this.check = true;\r\n        this.Add(event, (el)=> {\r\n            if (this.check) {\r\n                methods.handler && methods.handler(el);\r\n                this.check = false;\r\n                return;\r\n            }\r\n            methods.callback && methods.callback(el);\r\n            this.check = true;\r\n        }, prevent);\r\n        return this;\r\n    };\r\n\r\n    el.prototype.Not = function(target) {\r\n        let e = new el(this.el);\r\n        return e.Select(`:not(${target})`)\r\n    };\r\n\r\n    el.prototype.NotChild = function (target, event, methods){\r\n        let e = new el(this.el);\r\n        return this.Each(function() {\r\n            this.addEventListener(event, (evt) => {\r\n                const flyoutElement = e.Select(target).Dom();\r\n                let targetElement = evt.target;\r\n\r\n                do {\r\n                    if (flyoutElement.includes(targetElement)) {\r\n                        methods.callback && methods.callback();\r\n                        return;\r\n                    }\r\n\r\n                    targetElement = targetElement.parentNode;\r\n                } while (targetElement);\r\n\r\n                methods.handler && methods.handler(e.Select(target))\r\n            });\r\n        })\r\n    }\r\n\r\n    el.prototype.Click = function(handler) {\r\n        handler\r\n            ?\r\n            this.Add('click', (el) => handler(el)) :\r\n            this.Fire('click');\r\n        return this;\r\n    };\r\n\r\n    el.prototype.Focus = function(handler) {\r\n        handler\r\n            ?\r\n            this.Add('focus', (el) => handler(el)) :\r\n            this.el[0].focus();\r\n        return this;\r\n    };\r\n\r\n    el.prototype.Blur = function(handler) {\r\n        handler\r\n            ?\r\n            this.Add('blur', (el) => handler(el)) :\r\n            this.el[0].blur();\r\n        return this;\r\n    };\r\n}\r\n\r\nmodule.exports = {\r\n    Events: Events\r\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/seule/events/index.js\n");

/***/ })

}]);